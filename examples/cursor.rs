#![allow(clippy::single_match)]

use simple_logger::SimpleLogger;
use winit::{
    event::{ElementState, Event, KeyboardInput, WindowEvent},
    event_loop::EventLoop,
    window::{CursorIcon, CursorRgba, WindowBuilder},
};

enum CursorType<'a> {
    Icon(CursorIcon),
    Rgba {
        xhot: u32,
        yhot: u32,
        width: u32,
        height: u32,
        data: &'a [u32],
    },
}

fn main() {
    SimpleLogger::new().init().unwrap();
    let event_loop = EventLoop::new();

    let window = WindowBuilder::new().build(&event_loop).unwrap();
    window.set_title("A fantastic window!");

    let mut cursor_idx = 0;

    event_loop.run(move |event, _, control_flow| {
        control_flow.set_wait();

        match event {
            Event::WindowEvent {
                event:
                    WindowEvent::KeyboardInput {
                        input:
                            KeyboardInput {
                                state: ElementState::Pressed,
                                ..
                            },
                        ..
                    },
                ..
            } => {
                match &CURSORS[cursor_idx] {
                    CursorType::Icon(cursor) => {
                        println!("Setting cursor to \"{:?}\"", cursor);
                        window.set_cursor_icon(cursor.clone());
                    }
                    CursorType::Rgba {
                        xhot,
                        yhot,
                        width,
                        height,
                        data,
                    } => {
                        println!("Setting RGBA cursor");
                        window.set_cursor_rgba(CursorRgba {
                            xhot: *xhot,
                            yhot: *yhot,
                            width: *width,
                            height: *height,
                            data: data.to_vec(),
                        });
                    }
                }
                if cursor_idx < CURSORS.len() - 1 {
                    cursor_idx += 1;
                } else {
                    cursor_idx = 0;
                }
            }
            Event::WindowEvent {
                event: WindowEvent::CloseRequested,
                ..
            } => {
                control_flow.set_exit();
            }
            _ => (),
        }
    });
}

const CURSORS: &[CursorType] = &[
    CursorType::Icon(CursorIcon::Default),
    CursorType::Rgba {
        xhot: 8,
        yhot: 8,
        width: 32,
        height: 32,
        data: RGBA_WIN32_NOT_ALLOWED,
    },
    CursorType::Rgba {
        xhot: 0,
        yhot: 8,
        width: 32,
        height: 32,
        data: RGBA_WIN32_PROGRESS,
    },
    CursorType::Icon(CursorIcon::Crosshair),
    CursorType::Icon(CursorIcon::Hand),
    CursorType::Icon(CursorIcon::Arrow),
    CursorType::Icon(CursorIcon::Move),
    CursorType::Icon(CursorIcon::Text),
    CursorType::Icon(CursorIcon::Wait),
    CursorType::Icon(CursorIcon::Help),
    CursorType::Icon(CursorIcon::Progress),
    CursorType::Icon(CursorIcon::NotAllowed),
    CursorType::Icon(CursorIcon::ContextMenu),
    CursorType::Icon(CursorIcon::Cell),
    CursorType::Icon(CursorIcon::VerticalText),
    CursorType::Icon(CursorIcon::Alias),
    CursorType::Icon(CursorIcon::Copy),
    CursorType::Icon(CursorIcon::NoDrop),
    CursorType::Icon(CursorIcon::Grab),
    CursorType::Icon(CursorIcon::Grabbing),
    CursorType::Icon(CursorIcon::AllScroll),
    CursorType::Icon(CursorIcon::ZoomIn),
    CursorType::Icon(CursorIcon::ZoomOut),
    CursorType::Icon(CursorIcon::EResize),
    CursorType::Icon(CursorIcon::NResize),
    CursorType::Icon(CursorIcon::NeResize),
    CursorType::Icon(CursorIcon::NwResize),
    CursorType::Icon(CursorIcon::SResize),
    CursorType::Icon(CursorIcon::SeResize),
    CursorType::Icon(CursorIcon::SwResize),
    CursorType::Icon(CursorIcon::WResize),
    CursorType::Icon(CursorIcon::EwResize),
    CursorType::Icon(CursorIcon::NsResize),
    CursorType::Icon(CursorIcon::NeswResize),
    CursorType::Icon(CursorIcon::NwseResize),
    CursorType::Icon(CursorIcon::ColResize),
    CursorType::Icon(CursorIcon::RowResize),
];

#[rustfmt::skip]
const RGBA_WIN32_NOT_ALLOWED: &[u32] = &[0x0, 0x0, 0x0, 0x0, 0x39310000, 0xa5900000, 0xeacc0000, 0xffdf0000, 0xffdf0000, 0xe7ca0000, 0x9f8b0000, 0x332c0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0a0000, 0xa8920000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0x9c880000, 0x9070000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0a0000, 0xcfb50000, 0xffdf0000, 0xffdf0000, 0xffe63838, 0xfff29595, 0xfff9cccc, 0xfff9cccc, 0xfff18f8f, 0xffe53232, 0xffdf0000, 0xffdf0000, 0xc3aa0000, 0x6050000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa5900000, 0xffdf0000, 0xffdf0000, 0xffe21717, 0xfffce7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff18f8f, 0xffdf0303, 0xffdf0000, 0x96830000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x39310000, 0xffdf0000, 0xffdf0000, 0xffe21414, 0xffdf0000, 0xffe42929, 0xfffce7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff08989, 0xffdf0000, 0xfcdc0000, 0x2d270000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa5900000, 0xffdf0000, 0xffe63838, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffce7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffcfc, 0xffe52c2c, 0xffdf0000, 0x96830000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe1c40000, 0xffdf0000, 0xfff19292, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffceaea, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff08383, 0xffdf0000, 0xd2b70000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf9d90000, 0xffdf0000, 0xfff7bcbc, 0xffffffff, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffceaea, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff4aaaa, 0xffdf0000, 0xeacc0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfcdc0000, 0xffdf0000, 0xfff6b9b9, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffceaea, 0xffffffff, 0xffffffff, 0xfff4aaaa, 0xffdf0000, 0xedcf0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdbbf0000, 0xffdf0000, 0xfff08989, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffceaea, 0xffffffff, 0xffee7777, 0xffdf0000, 0xccb20000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x96830000, 0xffdf0000, 0xffe42626, 0xfffffcfc, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe42929, 0xfffce4e4, 0xffe21a1a, 0xffdf0000, 0x87760000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2d270000, 0xfcdc0000, 0xffdf0000, 0xffef7d7d, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffceaea, 0xffe52c2c, 0xffdf0000, 0xffe10c0c, 0xffdf0000, 0xf9d90000, 0x211c0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8d7b0000, 0xffdf0000, 0xffdf0000, 0xffec6565, 0xfffdf3f3, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffadbdb, 0xffdf0303, 0xffdf0000, 0xffdf0000, 0x7e6e0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6050000, 0xb49d0000, 0xffdf0000, 0xffdf0000, 0xffe21717, 0xffeb6262, 0xfff29595, 0xfff19292, 0xffeb5f5f, 0xffe21414, 0xffdf0000, 0xffdf0000, 0xa8920000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3020000, 0x87760000, 0xf9d90000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xffdf0000, 0xf6d70000, 0x7e6e0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x241f0000, 0x81700000, 0xc6ad0000, 0xe4c70000, 0xe1c40000, 0xc3aa0000, 0x7e6e0000, 0x1e1a0000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];

#[rustfmt::skip]
const RGBA_WIN32_PROGRESS: &[u32] = &[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x12000000, 0x14000000, 0x14000000, 0x14000000, 0x12000000, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7000000, 0x17000000, 0x700f395b, 0xc41f71b6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x700f395b, 0x17000000, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x45071c2d, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x45071c2d, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7000000, 0x45071c2d, 0xf1278de4, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xf1278de4, 0x45071c2d, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2602090f, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x7b12426a, 0x530a253c, 0x7b12426a, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x17000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x79114266, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xa81a5e98, 0x18000000, 0xf000000, 0x8000000, 0xf000000, 0x18000000, 0xa81a5e98, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x700f395b, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12000000, 0xf023b4ed, 0xff26c5fe, 0xff28aef8, 0xe6248ddb, 0x18000000, 0x5000000, 0x0, 0x0, 0x0, 0x5000000, 0x18000000, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x12000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0xb61a7eac, 0xf000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf000000, 0x7b12426a, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x17000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0x7e114f6d, 0x8000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa000000, 0x530a253c, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x14000000, 0xff25ccff, 0xff25ccff, 0xff25ccff, 0xb51a7eab, 0xf000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf000000, 0x7b12426a, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x14000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x12000000, 0xf023b4ed, 0xff25ccff, 0xff25ccff, 0xfb25c1fa, 0x26020c0f, 0x5000000, 0x0, 0x0, 0x0, 0x5000000, 0x18000000, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x12000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0xa000000, 0xa6186f99, 0xff25ccff, 0xff25ccff, 0xff25c9fe, 0xb31b6ca5, 0x18000000, 0xf000000, 0xa000000, 0xf000000, 0x18000000, 0xa81a5e98, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0x700f395b, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x0, 0x17000000, 0xf824b9f5, 0xff26c1fd, 0xff29a1f5, 0xff2a97f3, 0xe22584d5, 0x7b12426a, 0x530a253c, 0x7b12426a, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x17000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x7000000, 0x5c0b3247, 0xf22792e6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xf1278de4, 0x45071c2d, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0xa000000, 0x45071c2d, 0xe22584d5, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xe22584d5, 0x45071c2d, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbd00010b, 0x37000104, 0x7000000, 0x17000000, 0x700f395b, 0xc41f71b6, 0xff2a97f3, 0xff2a97f3, 0xff2a97f3, 0xc41f71b6, 0x700f395b, 0x17000000, 0x7000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff8f9fb, 0xbd00010b, 0x37000104, 0x0, 0xa000000, 0x12000000, 0x14000000, 0x14000000, 0x14000000, 0x12000000, 0xa000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff0f0f3, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe8e8ea, 0xbd00010b, 0x37000104, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe1e1e3, 0xbd00010b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff4f4f7, 0xffffffff, 0xffffffff, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0xbd00010b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xffffffff, 0xfff4f4f7, 0xf400000d, 0xffb3b4bc, 0xffffffff, 0xbc00010b, 0x4d000106, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xffffffff, 0xfff4f4f7, 0xf400000d, 0x37000104, 0xd300000c, 0xffffffff, 0xffe1e1e3, 0xd300000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe700000c, 0xfff4f4f7, 0xf400000d, 0x37000104, 0x0, 0xb400010c, 0xffc2c2c9, 0xffffffff, 0xb400010c, 0x4d000106, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbd00010b, 0xf400000d, 0x37000104, 0x0, 0x0, 0x37000104, 0xd700000c, 0xffffffff, 0xffd6d6d8, 0xd100000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb400010c, 0xffd6d6d8, 0xffffffff, 0xcc00000c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1a000002, 0xd700000c, 0x9e00010b, 0x31000004, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];
